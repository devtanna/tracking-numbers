# DO NOT EDIT - Generated by codegen.py

import re

from tracking_numbers.checksum_validator import Mod10
from tracking_numbers.checksum_validator import Mod7
from tracking_numbers.checksum_validator import Mod37_36
from tracking_numbers.checksum_validator import S10
from tracking_numbers.checksum_validator import SumProductWithWeightsAndModulo
from tracking_numbers.definition import AdditionalValidation
from tracking_numbers.definition import TrackingNumberDefinition
from tracking_numbers.serial_number import DefaultSerialNumberParser
from tracking_numbers.serial_number import PrependIf
from tracking_numbers.serial_number import UPSSerialNumberParser
from tracking_numbers.types import Courier
from tracking_numbers.types import Product
from tracking_numbers.value_matcher import ExactValueMatcher
from tracking_numbers.value_matcher import RegexValueMatcher


DEFINITIONS = [
    TrackingNumberDefinition(
        courier=Courier(code="lasership", name="LaserShip"),
        product=Product(name="LaserShip LX"),
        number_regex=re.compile(
            "(\\b\\s*L\\s*[AIEHNX]\\s*[1-3]\\s*(?P<SerialNumber>([0-9]\\s*){7,7})\\s*\\b)"
        ),
        tracking_url_template=None,
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=None,
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="lasership", name="LaserShip"),
        product=Product(name="LaserShip 1LS7 (15)"),
        number_regex=re.compile(
            "(\\b\\s*1\\s*L\\s*S\\s*7\\s*[12]\\s*([0-9]\\s*){4,4}(?P<SerialNumber>([0-9]\\s*){6,6})\\s*\\b)"
        ),
        tracking_url_template=None,
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=None,
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="lasership", name="LaserShip"),
        product=Product(name="LaserShip 1LS7 (18)"),
        number_regex=re.compile(
            "(\\b\\s*1\\s*L\\s*S\\s*7\\s*[12]\\s*([0-9]\\s*){2,2}\\s*0\\s*1\\s*[1234]\\s*\\s*(?P<SerialNumber>([0-9]\\s*){6,6})-\\s*1\\s*\\b)"
        ),
        tracking_url_template=None,
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=None,
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="dhl", name="DHL"),
        product=Product(name="DHL Express"),
        number_regex=re.compile(
            "(\\b\\s*(?P<SerialNumber>([0-9]\\s*){9})(?P<CheckDigit>([0-9]\\s*))\\b)"
        ),
        tracking_url_template="http://www.dhl.com/en/express/tracking.html?brand=DHL&AWB=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=Mod7(),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="dhl", name="DHL"),
        product=Product(name="DHL Express Air"),
        number_regex=re.compile(
            "(\\b\\s*(?P<SerialNumber>([0-9]\\s*){10})(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="http://www.dhl.com/en/express/tracking.html?brand=DHL&AWB=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=Mod7(),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="dhl", name="DHL"),
        product=Product(name="DHL E-Commerce"),
        number_regex=re.compile(
            "(\\b\\s*((G\\s*M\\s*)|(L\\s*X\\s*)|(R\\s*X\\s*)|(U\\s*V\\s*)|(C\\s*N\\s*)|(S\\s*G\\s*)|(T\\s*H\\s*)|(I\\s*N\\s*)|(H\\s*K\\s*)|(M\\s*Y\\s*))\\s*(?P<SerialNumber>(\\w\\s*){10,39})\\b)"
        ),
        tracking_url_template="http://www.dhl.com/en/express/tracking.html?brand=DHL&AWB=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=None,
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="amazon", name="Amazon"),
        product=Product(name="Amazon Logistics"),
        number_regex=re.compile(
            "(\\b\\s*T\\s*B\\s*A\\s*(?P<SerialNumber>([0-9]\\s*){12,12})\\s*\\b)"
        ),
        tracking_url_template=None,
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=None,
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="amazon", name="Amazon"),
        product=Product(name="Amazon International"),
        number_regex=re.compile(
            "(\\b\\s*[AFC]\\s*(?P<SerialNumber>([0-9]\\s*){10,10})\\s*\\b)"
        ),
        tracking_url_template=None,
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=None,
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="usps", name="United States Postal Service"),
        product=Product(name="USPS 20"),
        number_regex=re.compile(
            "(\\b\\s*(?P<SerialNumber>(?P<ServiceType>([0-9]\\s*){2})(?P<ShipperId>([0-9]\\s*){9})(?P<PackageId>([0-9]\\s*){8}))(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="https://tools.usps.com/go/TrackConfirmAction?tLabels=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=Mod10(odds_multiplier=1, evens_multiplier=3),
        additional_validations=[
            AdditionalValidation(
                name="Service Type",
                regex_group_name="ServiceType",
                value_matchers=[
                    ExactValueMatcher(value="71"),
                    ExactValueMatcher(value="73"),
                    ExactValueMatcher(value="77"),
                    ExactValueMatcher(value="81"),
                ],
            )
        ],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="usps", name="United States Postal Service"),
        product=Product(name="USPS 34v2"),
        number_regex=re.compile(
            "(\\b\\s*(?P<RoutingApplicationId>4\\s*2\\s*0\\s*)(?P<DestinationZip>([0-9]\\s*){5})(?P<RoutingNumber>([0-9]\\s*){4})(?P<SerialNumber>(?P<ApplicationIdentifier>9\\s*[2345]\\s*)?(?P<ShipperId>([0-9]\\s*){8})(?P<PackageId>([0-9]\\s*){11}))(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="https://tools.usps.com/go/TrackConfirmAction?tLabels=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=Mod10(odds_multiplier=1, evens_multiplier=3),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="usps", name="United States Postal Service"),
        product=Product(name="USPS 91"),
        number_regex=re.compile(
            "(\\b\\s*(?:(?P<RoutingApplicationId>4\\s*2\\s*0\\s*)(?P<DestinationZip>([0-9]\\s*){5}))?(?P<SerialNumber>(?P<ApplicationIdentifier>9\\s*[12345]\\s*)?(?P<SCNC>([0-9]\\s*){2})(?P<ServiceType>([0-9]\\s*){2})(?P<ShipperId>([0-9]\\s*){8})(?P<PackageId>([0-9]\\s*){11}|([0-9]\\s*){7}))(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="https://tools.usps.com/go/TrackConfirmAction?tLabels=%s",
        serial_number_parser=DefaultSerialNumberParser(
            prepend_if=PrependIf(
                matches_regex=re.compile(
                    "(\\b^(?!9[1-5]).+\\b)", re.IGNORECASE | re.MULTILINE
                ),
                content="91",
            )
        ),
        checksum_validator=Mod10(odds_multiplier=1, evens_multiplier=3),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="canada_post", name="Canada Post"),
        product=Product(name="Canada Post (16)"),
        number_regex=re.compile(
            "(\\b\\s*(?P<SerialNumber>(?P<OriginId>([0-9]\\s*){7})([0-9]\\s*){8})(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="https://www.canadapost-postescanada.ca/track-reperage/en#/search?searchFor=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=Mod10(odds_multiplier=1, evens_multiplier=3),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="fedex", name="FedEx"),
        product=Product(name="FedEx Express (12)"),
        number_regex=re.compile(
            "(\\b\\s*(?P<SerialNumber>([0-9]\\s*){11})(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="https://www.fedex.com/apps/fedextrack/?tracknumbers=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=SumProductWithWeightsAndModulo(
            weights=[3, 1, 7, 3, 1, 7, 3, 1, 7, 3, 1], first_modulo=11, second_modulo=10
        ),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="fedex", name="FedEx"),
        product=Product(name="FedEx Express (34)"),
        number_regex=re.compile(
            "(\\b\\s*1\\s*0\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s*([0-9]\\s*){10}(?P<DestinationZip>([0-9]\\s*){5})(?P<SerialNumber>([0-9]\\s*){13})(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="https://www.fedex.com/apps/fedextrack/?tracknumbers=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=SumProductWithWeightsAndModulo(
            weights=[1, 7, 3, 1, 7, 3, 1, 7, 3, 1, 7, 3, 1],
            first_modulo=11,
            second_modulo=10,
        ),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="fedex", name="FedEx"),
        product=Product(name="FedEx SmartPost"),
        number_regex=re.compile(
            "(\\b\\s*(?:(?:(?P<RoutingApplicationId>4\\s*2\\s*0\\s*)(?P<DestinationZip>([0-9]\\s*){5}))?(?P<ApplicationIdentifier>9\\s*2\\s*))?(?P<SerialNumber>(?P<ServiceType>([0-9]\\s*){3})(?P<ShipperId>([0-9]\\s*){9})(?P<PackageId>([0-9]\\s*){7}))(?P<CheckDigit>([0-9]\\s*))\\b)"
        ),
        tracking_url_template="https://www.fedex.com/apps/fedextrack/?tracknumbers=%s",
        serial_number_parser=DefaultSerialNumberParser(
            prepend_if=PrependIf(
                matches_regex=re.compile(
                    "(\\b^(?!92).+\\b)", re.IGNORECASE | re.MULTILINE
                ),
                content="92",
            )
        ),
        checksum_validator=Mod10(odds_multiplier=1, evens_multiplier=3),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="fedex", name="FedEx"),
        product=Product(name="FedEx Ground"),
        number_regex=re.compile(
            "(\\b\\s*(?P<SerialNumber>([0-9]\\s*){14})(?P<CheckDigit>([0-9]\\s*))\\b)"
        ),
        tracking_url_template="https://www.fedex.com/apps/fedextrack/?tracknumbers=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=Mod10(odds_multiplier=3, evens_multiplier=1),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="fedex", name="FedEx"),
        product=Product(name="FedEx Ground (SSCC-18)"),
        number_regex=re.compile(
            "(\\b\\s*(?P<ShippingContainerType>([0-9]\\s*){2})(?P<SerialNumber>([0-9]\\s*){15})(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="https://www.fedex.com/apps/fedextrack/?tracknumbers=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=Mod10(odds_multiplier=1, evens_multiplier=3),
        additional_validations=[
            AdditionalValidation(
                name="Container Type",
                regex_group_name="ShippingContainerType",
                value_matchers=[
                    ExactValueMatcher(value="00"),
                    ExactValueMatcher(value="01"),
                    ExactValueMatcher(value="02"),
                    ExactValueMatcher(value="04"),
                ],
            )
        ],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="fedex", name="FedEx"),
        product=Product(name="FedEx Ground 96 (22)"),
        number_regex=re.compile(
            "(\\b\\s*(?P<ApplicationIdentifier>9\\s*6\\s*)(?P<SCNC>([0-9]\\s*){2})(?P<ServiceType>([0-9]\\s*){3})(?P<SerialNumber>(?P<ShipperId>([0-9]\\s*){7})(?P<PackageId>([0-9]\\s*){7}))(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="https://www.fedex.com/apps/fedextrack/?tracknumbers=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=Mod10(odds_multiplier=3, evens_multiplier=1),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="fedex", name="FedEx"),
        product=Product(name="FedEx Ground GSN"),
        number_regex=re.compile(
            "(\\b\\s*(?P<ApplicationIdentifier>9\\s*6\\s*)(?P<SCNC>([0-9]\\s*){2})([0-9]\\s*){5}(?P<GSN>([0-9]\\s*){10})[0-9]\\s*(?P<SerialNumber>([0-9]\\s*){13})(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="https://www.fedex.com/apps/fedextrack/?tracknumbers=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=SumProductWithWeightsAndModulo(
            weights=[1, 7, 3, 1, 7, 3, 1, 7, 3, 1, 7, 3, 1],
            first_modulo=11,
            second_modulo=10,
        ),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="landmark", name="Landmark Global LTN"),
        product=Product(name="Landmark Global LTN"),
        number_regex=re.compile(
            "(\\b\\s*L\\s*T\\s*N\\s*(?P<SerialNumber>([0-9]\\s*){8})\\s*N\\s*1\\b)"
        ),
        tracking_url_template="https://track.landmarkglobal.com/?search=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=None,
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="ups", name="UPS"),
        product=Product(name="UPS"),
        number_regex=re.compile(
            "(\\b\\s*1\\s*Z\\s*(?P<SerialNumber>(?P<ShipperId>(?:[A-Z0-9]\\s*){6,6})(?P<ServiceType>(?:[A-Z0-9]\\s*){2,2})(?P<PackageId>(?:[A-Z0-9]\\s*){7,7}))(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="https://wwwapps.ups.com/WebTracking/track?track=yes&trackNums=%s",
        serial_number_parser=UPSSerialNumberParser(),
        checksum_validator=Mod10(odds_multiplier=2, evens_multiplier=1),
        additional_validations=[
            AdditionalValidation(
                name="Service Type",
                regex_group_name="ServiceType",
                value_matchers=[
                    ExactValueMatcher(value="01"),
                    ExactValueMatcher(value="02"),
                    ExactValueMatcher(value="03"),
                    ExactValueMatcher(value="12"),
                    ExactValueMatcher(value="13"),
                    ExactValueMatcher(value="15"),
                    ExactValueMatcher(value="22"),
                    ExactValueMatcher(value="32"),
                    ExactValueMatcher(value="33"),
                    ExactValueMatcher(value="41"),
                    ExactValueMatcher(value="42"),
                    ExactValueMatcher(value="44"),
                    ExactValueMatcher(value="66"),
                    ExactValueMatcher(value="72"),
                    ExactValueMatcher(value="78"),
                    ExactValueMatcher(value="90"),
                    ExactValueMatcher(value="A0"),
                    ExactValueMatcher(value="A1"),
                    ExactValueMatcher(value="A2"),
                    ExactValueMatcher(value="A8"),
                    ExactValueMatcher(value="A9"),
                    ExactValueMatcher(value="AA"),
                    ExactValueMatcher(value="YW"),
                ],
            )
        ],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="ups", name="UPS"),
        product=Product(name="UPS Waybill"),
        number_regex=re.compile(
            "(\\b\\s*(?P<ServiceType>([A-Z]\\s*){1})(?P<SerialNumber>(?:[A-Z0-9]\\s*){9,9})(?P<CheckDigit>[A-Z0-9]\\s*)\\b)"
        ),
        tracking_url_template="https://wwwapps.ups.com/WebTracking/track?track=yes&trackNums=%s",
        serial_number_parser=UPSSerialNumberParser(),
        checksum_validator=Mod10(odds_multiplier=2, evens_multiplier=1),
        additional_validations=[
            AdditionalValidation(
                name="Service Type",
                regex_group_name="ServiceType",
                value_matchers=[
                    ExactValueMatcher(value="J"),
                    ExactValueMatcher(value="K"),
                ],
            )
        ],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="s10", name="S10 International Standard"),
        product=Product(name="S10"),
        number_regex=re.compile(
            "(\\b\\s*(?P<ServiceType>([A-Z]\\s*){2})(?P<SerialNumber>([0-9]\\s*){8})(?P<CheckDigit>([0-9]\\s*))(?P<CountryCode>([A-Z]\\s*){2})\\b)"
        ),
        tracking_url_template=None,
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=S10(),
        additional_validations=[
            AdditionalValidation(
                name="Service Type",
                regex_group_name="ServiceType",
                value_matchers=[
                    RegexValueMatcher(pattern=re.compile("E[A-Z]")),
                    RegexValueMatcher(pattern=re.compile("L[A-Z]")),
                    RegexValueMatcher(pattern=re.compile("M[A-Z]")),
                    RegexValueMatcher(pattern=re.compile("Q[A-M]")),
                    RegexValueMatcher(pattern=re.compile("R[A-Z]")),
                    RegexValueMatcher(pattern=re.compile("U[A-Z]")),
                    RegexValueMatcher(pattern=re.compile("V[A-Z]")),
                    RegexValueMatcher(pattern=re.compile("C[A-Z]")),
                    RegexValueMatcher(pattern=re.compile("H[A-Z]")),
                    RegexValueMatcher(
                        pattern=re.compile("([BDNPZ][A-Z]|A[V-Z]|G[AD])")
                    ),
                ],
            ),
            AdditionalValidation(
                name="Courier",
                regex_group_name="CountryCode",
                value_matchers=[
                    ExactValueMatcher(value="AF"),
                    ExactValueMatcher(value="AL"),
                    ExactValueMatcher(value="DZ"),
                    ExactValueMatcher(value="AO"),
                    ExactValueMatcher(value="AG"),
                    ExactValueMatcher(value="AR"),
                    ExactValueMatcher(value="AM"),
                    ExactValueMatcher(value="AU"),
                    ExactValueMatcher(value="AT"),
                    ExactValueMatcher(value="AZ"),
                    ExactValueMatcher(value="BS"),
                    ExactValueMatcher(value="BH"),
                    ExactValueMatcher(value="BD"),
                    ExactValueMatcher(value="BB"),
                    ExactValueMatcher(value="BY"),
                    ExactValueMatcher(value="BE"),
                    ExactValueMatcher(value="BZ"),
                    ExactValueMatcher(value="BJ"),
                    ExactValueMatcher(value="BT"),
                    ExactValueMatcher(value="BO"),
                    ExactValueMatcher(value="BA"),
                    ExactValueMatcher(value="BW"),
                    ExactValueMatcher(value="BR"),
                    ExactValueMatcher(value="BN"),
                    ExactValueMatcher(value="BG"),
                    ExactValueMatcher(value="BF"),
                    ExactValueMatcher(value="BI"),
                    ExactValueMatcher(value="KH"),
                    ExactValueMatcher(value="CM"),
                    ExactValueMatcher(value="CA"),
                    ExactValueMatcher(value="CV"),
                    ExactValueMatcher(value="CF"),
                    ExactValueMatcher(value="TD"),
                    ExactValueMatcher(value="CL"),
                    ExactValueMatcher(value="CN"),
                    ExactValueMatcher(value="HK"),
                    ExactValueMatcher(value="CO"),
                    ExactValueMatcher(value="KM"),
                    ExactValueMatcher(value="CG"),
                    ExactValueMatcher(value="CR"),
                    ExactValueMatcher(value="HR"),
                    ExactValueMatcher(value="CU"),
                    ExactValueMatcher(value="CY"),
                    ExactValueMatcher(value="CZ"),
                    ExactValueMatcher(value="CI"),
                    ExactValueMatcher(value="KP"),
                    ExactValueMatcher(value="CD"),
                    ExactValueMatcher(value="DK"),
                    ExactValueMatcher(value="DJ"),
                    ExactValueMatcher(value="DM"),
                    ExactValueMatcher(value="DO"),
                    ExactValueMatcher(value="EC"),
                    ExactValueMatcher(value="EG"),
                    ExactValueMatcher(value="SV"),
                    ExactValueMatcher(value="GQ"),
                    ExactValueMatcher(value="ER"),
                    ExactValueMatcher(value="EE"),
                    ExactValueMatcher(value="ET"),
                    ExactValueMatcher(value="FJ"),
                    ExactValueMatcher(value="FI"),
                    ExactValueMatcher(value="FR"),
                    ExactValueMatcher(value="GA"),
                    ExactValueMatcher(value="GM"),
                    ExactValueMatcher(value="GE"),
                    ExactValueMatcher(value="DE"),
                    ExactValueMatcher(value="GH"),
                    ExactValueMatcher(value="GB"),
                    ExactValueMatcher(value="GR"),
                    ExactValueMatcher(value="GD"),
                    ExactValueMatcher(value="GT"),
                    ExactValueMatcher(value="GN"),
                    ExactValueMatcher(value="GW"),
                    ExactValueMatcher(value="GY"),
                    ExactValueMatcher(value="HT"),
                    ExactValueMatcher(value="HN"),
                    ExactValueMatcher(value="HU"),
                    ExactValueMatcher(value="IS"),
                    ExactValueMatcher(value="IN"),
                    ExactValueMatcher(value="ID"),
                    ExactValueMatcher(value="IR"),
                    ExactValueMatcher(value="IQ"),
                    ExactValueMatcher(value="IE"),
                    ExactValueMatcher(value="IL"),
                    ExactValueMatcher(value="IT"),
                    ExactValueMatcher(value="JM"),
                    ExactValueMatcher(value="JP"),
                    ExactValueMatcher(value="JO"),
                    ExactValueMatcher(value="KZ"),
                    ExactValueMatcher(value="KE"),
                    ExactValueMatcher(value="KI"),
                    ExactValueMatcher(value="KR"),
                    ExactValueMatcher(value="KW"),
                    ExactValueMatcher(value="KG"),
                    ExactValueMatcher(value="LA"),
                    ExactValueMatcher(value="LV"),
                    ExactValueMatcher(value="LB"),
                    ExactValueMatcher(value="LS"),
                    ExactValueMatcher(value="LR"),
                    ExactValueMatcher(value="LY"),
                    ExactValueMatcher(value="LI"),
                    ExactValueMatcher(value="LT"),
                    ExactValueMatcher(value="LU"),
                    ExactValueMatcher(value="MG"),
                    ExactValueMatcher(value="MW"),
                    ExactValueMatcher(value="MY"),
                    ExactValueMatcher(value="MV"),
                    ExactValueMatcher(value="ML"),
                    ExactValueMatcher(value="MT"),
                    ExactValueMatcher(value="MR"),
                    ExactValueMatcher(value="MU"),
                    ExactValueMatcher(value="MX"),
                    ExactValueMatcher(value="MD"),
                    ExactValueMatcher(value="MC"),
                    ExactValueMatcher(value="MN"),
                    ExactValueMatcher(value="ME"),
                    ExactValueMatcher(value="MA"),
                    ExactValueMatcher(value="MZ"),
                    ExactValueMatcher(value="MM"),
                    ExactValueMatcher(value="NA"),
                    ExactValueMatcher(value="NR"),
                    ExactValueMatcher(value="NP"),
                    ExactValueMatcher(value="NL"),
                    ExactValueMatcher(value="NZ"),
                    ExactValueMatcher(value="NI"),
                    ExactValueMatcher(value="NE"),
                    ExactValueMatcher(value="NG"),
                    ExactValueMatcher(value="NO"),
                    ExactValueMatcher(value="OM"),
                    ExactValueMatcher(value="PK"),
                    ExactValueMatcher(value="PA"),
                    ExactValueMatcher(value="PG"),
                    ExactValueMatcher(value="PY"),
                    ExactValueMatcher(value="PE"),
                    ExactValueMatcher(value="PH"),
                    ExactValueMatcher(value="PL"),
                    ExactValueMatcher(value="PT"),
                    ExactValueMatcher(value="QA"),
                    ExactValueMatcher(value="RO"),
                    ExactValueMatcher(value="RU"),
                    ExactValueMatcher(value="RW"),
                    ExactValueMatcher(value="KN"),
                    ExactValueMatcher(value="LC"),
                    ExactValueMatcher(value="VC"),
                    ExactValueMatcher(value="WS"),
                    ExactValueMatcher(value="SM"),
                    ExactValueMatcher(value="ST"),
                    ExactValueMatcher(value="SA"),
                    ExactValueMatcher(value="SN"),
                    ExactValueMatcher(value="RS"),
                    ExactValueMatcher(value="SC"),
                    ExactValueMatcher(value="SL"),
                    ExactValueMatcher(value="SG"),
                    ExactValueMatcher(value="SK"),
                    ExactValueMatcher(value="SI"),
                    ExactValueMatcher(value="SB"),
                    ExactValueMatcher(value="SO"),
                    ExactValueMatcher(value="ZA"),
                    ExactValueMatcher(value="SS"),
                    ExactValueMatcher(value="ES"),
                    ExactValueMatcher(value="LK"),
                    ExactValueMatcher(value="SD"),
                    ExactValueMatcher(value="SR"),
                    ExactValueMatcher(value="SZ"),
                    ExactValueMatcher(value="SE"),
                    ExactValueMatcher(value="CH"),
                    ExactValueMatcher(value="SY"),
                    ExactValueMatcher(value="TJ"),
                    ExactValueMatcher(value="TZ"),
                    ExactValueMatcher(value="TH"),
                    ExactValueMatcher(value="MK"),
                    ExactValueMatcher(value="TL"),
                    ExactValueMatcher(value="TG"),
                    ExactValueMatcher(value="TO"),
                    ExactValueMatcher(value="TT"),
                    ExactValueMatcher(value="TN"),
                    ExactValueMatcher(value="TR"),
                    ExactValueMatcher(value="TM"),
                    ExactValueMatcher(value="TV"),
                    ExactValueMatcher(value="UG"),
                    ExactValueMatcher(value="UA"),
                    ExactValueMatcher(value="AE"),
                    ExactValueMatcher(value="US"),
                    ExactValueMatcher(value="UY"),
                    ExactValueMatcher(value="UZ"),
                    ExactValueMatcher(value="VU"),
                    ExactValueMatcher(value="VA"),
                    ExactValueMatcher(value="VE"),
                    ExactValueMatcher(value="VN"),
                    ExactValueMatcher(value="YE"),
                    ExactValueMatcher(value="ZM"),
                    ExactValueMatcher(value="ZW"),
                ],
            ),
        ],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="ontrac", name="OnTrac"),
        product=Product(name="OnTrac"),
        number_regex=re.compile(
            "(\\b\\s*C\\s*(?P<SerialNumber>([0-9]\\s*){13})(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="http://www.ontrac.com/trackingres.asp?tracking_number=%s",
        serial_number_parser=DefaultSerialNumberParser(
            prepend_if=PrependIf(
                matches_regex=re.compile(
                    "(\\b^(?!4).+$\\b)", re.IGNORECASE | re.MULTILINE
                ),
                content="4",
            )
        ),
        checksum_validator=Mod10(odds_multiplier=2, evens_multiplier=1),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="ontrac", name="OnTrac"),
        product=Product(name="OnTrac D"),
        number_regex=re.compile(
            "(\\b\\s*D\\s*(?P<SerialNumber>([0-9]\\s*){13})(?P<CheckDigit>[0-9]\\s*)\\b)"
        ),
        tracking_url_template="http://www.ontrac.com/trackingres.asp?tracking_number=%s",
        serial_number_parser=DefaultSerialNumberParser(
            prepend_if=PrependIf(
                matches_regex=re.compile(
                    "(\\b^(?!5).+$\\b)", re.IGNORECASE | re.MULTILINE
                ),
                content="5",
            )
        ),
        checksum_validator=Mod10(odds_multiplier=2, evens_multiplier=1),
        additional_validations=[],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="dpd", name="DPD"),
        product=Product(name="DPD (28)"),
        number_regex=re.compile(
            "(\\b\\s*(?P<SerialNumber>(?P<DestinationZip>([0-9]\\s*){7})([0-9]\\s*){14}(?P<ServiceType>([0-9]\\s*){3})(?P<CountryCode>([0-9]\\s*){3}))(?P<CheckDigit>[0-9A-Z]\\s*)\\b)"
        ),
        tracking_url_template="https://www.dpdgroup.com/nl/mydpd/my-parcels/track?lang=en&parcelNumber=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=Mod37_36(),
        additional_validations=[
            AdditionalValidation(
                name="Service Type",
                regex_group_name="ServiceType",
                value_matchers=[
                    ExactValueMatcher(value="101"),
                    ExactValueMatcher(value="102"),
                    ExactValueMatcher(value="105"),
                    ExactValueMatcher(value="106"),
                    ExactValueMatcher(value="109"),
                    ExactValueMatcher(value="110"),
                    ExactValueMatcher(value="113"),
                    ExactValueMatcher(value="136"),
                    ExactValueMatcher(value="154"),
                    ExactValueMatcher(value="155"),
                    ExactValueMatcher(value="161"),
                    ExactValueMatcher(value="179"),
                    ExactValueMatcher(value="191"),
                    ExactValueMatcher(value="225"),
                    ExactValueMatcher(value="237"),
                    ExactValueMatcher(value="350"),
                ],
            ),
            AdditionalValidation(
                name="Country Code",
                regex_group_name="CountryCode",
                value_matchers=[
                    ExactValueMatcher(value="818"),
                    ExactValueMatcher(value="226"),
                    ExactValueMatcher(value="231"),
                    ExactValueMatcher(value="004"),
                    ExactValueMatcher(value="248"),
                    ExactValueMatcher(value="008"),
                    ExactValueMatcher(value="012"),
                    ExactValueMatcher(value="016"),
                    ExactValueMatcher(value="020"),
                    ExactValueMatcher(value="024"),
                    ExactValueMatcher(value="660"),
                    ExactValueMatcher(value="010"),
                    ExactValueMatcher(value="028"),
                    ExactValueMatcher(value="032"),
                    ExactValueMatcher(value="051"),
                    ExactValueMatcher(value="533"),
                    ExactValueMatcher(value="031"),
                    ExactValueMatcher(value="036"),
                    ExactValueMatcher(value="044"),
                    ExactValueMatcher(value="048"),
                    ExactValueMatcher(value="050"),
                    ExactValueMatcher(value="052"),
                    ExactValueMatcher(value="056"),
                    ExactValueMatcher(value="084"),
                    ExactValueMatcher(value="204"),
                    ExactValueMatcher(value="060"),
                    ExactValueMatcher(value="064"),
                    ExactValueMatcher(value="068"),
                    ExactValueMatcher(value="535"),
                    ExactValueMatcher(value="070"),
                    ExactValueMatcher(value="072"),
                    ExactValueMatcher(value="074"),
                    ExactValueMatcher(value="076"),
                    ExactValueMatcher(value="086"),
                    ExactValueMatcher(value="096"),
                    ExactValueMatcher(value="100"),
                    ExactValueMatcher(value="854"),
                    ExactValueMatcher(value="108"),
                    ExactValueMatcher(value="136"),
                    ExactValueMatcher(value="152"),
                    ExactValueMatcher(value="156"),
                    ExactValueMatcher(value="184"),
                    ExactValueMatcher(value="188"),
                    ExactValueMatcher(value="531"),
                    ExactValueMatcher(value="208"),
                    ExactValueMatcher(value="276"),
                    ExactValueMatcher(value="212"),
                    ExactValueMatcher(value="214"),
                    ExactValueMatcher(value="262"),
                    ExactValueMatcher(value="218"),
                    ExactValueMatcher(value="222"),
                    ExactValueMatcher(value="384"),
                    ExactValueMatcher(value="232"),
                    ExactValueMatcher(value="233"),
                    ExactValueMatcher(value="234"),
                    ExactValueMatcher(value="238"),
                    ExactValueMatcher(value="242"),
                    ExactValueMatcher(value="246"),
                    ExactValueMatcher(value="250"),
                    ExactValueMatcher(value="260"),
                    ExactValueMatcher(value="258"),
                    ExactValueMatcher(value="266"),
                    ExactValueMatcher(value="270"),
                    ExactValueMatcher(value="268"),
                    ExactValueMatcher(value="288"),
                    ExactValueMatcher(value="292"),
                    ExactValueMatcher(value="308"),
                    ExactValueMatcher(value="300"),
                    ExactValueMatcher(value="304"),
                    ExactValueMatcher(value="826"),
                    ExactValueMatcher(value="312"),
                    ExactValueMatcher(value="316"),
                    ExactValueMatcher(value="320"),
                    ExactValueMatcher(value="831"),
                    ExactValueMatcher(value="324"),
                    ExactValueMatcher(value="624"),
                    ExactValueMatcher(value="328"),
                    ExactValueMatcher(value="254"),
                    ExactValueMatcher(value="332"),
                    ExactValueMatcher(value="334"),
                    ExactValueMatcher(value="340"),
                    ExactValueMatcher(value="344"),
                    ExactValueMatcher(value="356"),
                    ExactValueMatcher(value="360"),
                    ExactValueMatcher(value="364"),
                    ExactValueMatcher(value="368"),
                    ExactValueMatcher(value="372"),
                    ExactValueMatcher(value="352"),
                    ExactValueMatcher(value="833"),
                    ExactValueMatcher(value="376"),
                    ExactValueMatcher(value="380"),
                    ExactValueMatcher(value="388"),
                    ExactValueMatcher(value="392"),
                    ExactValueMatcher(value="887"),
                    ExactValueMatcher(value="832"),
                    ExactValueMatcher(value="400"),
                    ExactValueMatcher(value="092"),
                    ExactValueMatcher(value="116"),
                    ExactValueMatcher(value="120"),
                    ExactValueMatcher(value="124"),
                    ExactValueMatcher(value="991"),
                    ExactValueMatcher(value="132"),
                    ExactValueMatcher(value="583"),
                    ExactValueMatcher(value="398"),
                    ExactValueMatcher(value="634"),
                    ExactValueMatcher(value="404"),
                    ExactValueMatcher(value="417"),
                    ExactValueMatcher(value="296"),
                    ExactValueMatcher(value="581"),
                    ExactValueMatcher(value="166"),
                    ExactValueMatcher(value="170"),
                    ExactValueMatcher(value="174"),
                    ExactValueMatcher(value="178"),
                    ExactValueMatcher(value="180"),
                    ExactValueMatcher(value="191"),
                    ExactValueMatcher(value="192"),
                    ExactValueMatcher(value="414"),
                    ExactValueMatcher(value="418"),
                    ExactValueMatcher(value="426"),
                    ExactValueMatcher(value="428"),
                    ExactValueMatcher(value="422"),
                    ExactValueMatcher(value="430"),
                    ExactValueMatcher(value="434"),
                    ExactValueMatcher(value="438"),
                    ExactValueMatcher(value="440"),
                    ExactValueMatcher(value="442"),
                    ExactValueMatcher(value="446"),
                    ExactValueMatcher(value="450"),
                    ExactValueMatcher(value="454"),
                    ExactValueMatcher(value="458"),
                    ExactValueMatcher(value="462"),
                    ExactValueMatcher(value="466"),
                    ExactValueMatcher(value="470"),
                    ExactValueMatcher(value="504"),
                    ExactValueMatcher(value="584"),
                    ExactValueMatcher(value="474"),
                    ExactValueMatcher(value="478"),
                    ExactValueMatcher(value="480"),
                    ExactValueMatcher(value="175"),
                    ExactValueMatcher(value="807"),
                    ExactValueMatcher(value="484"),
                    ExactValueMatcher(value="498"),
                    ExactValueMatcher(value="492"),
                    ExactValueMatcher(value="496"),
                    ExactValueMatcher(value="499"),
                    ExactValueMatcher(value="500"),
                    ExactValueMatcher(value="508"),
                    ExactValueMatcher(value="104"),
                    ExactValueMatcher(value="516"),
                    ExactValueMatcher(value="520"),
                    ExactValueMatcher(value="524"),
                    ExactValueMatcher(value="540"),
                    ExactValueMatcher(value="554"),
                    ExactValueMatcher(value="558"),
                    ExactValueMatcher(value="530"),
                    ExactValueMatcher(value="528"),
                    ExactValueMatcher(value="562"),
                    ExactValueMatcher(value="566"),
                    ExactValueMatcher(value="570"),
                    ExactValueMatcher(value="580"),
                    ExactValueMatcher(value="408"),
                    ExactValueMatcher(value="574"),
                    ExactValueMatcher(value="578"),
                    ExactValueMatcher(value="040"),
                    ExactValueMatcher(value="512"),
                    ExactValueMatcher(value="626"),
                    ExactValueMatcher(value="586"),
                    ExactValueMatcher(value="275"),
                    ExactValueMatcher(value="585"),
                    ExactValueMatcher(value="591"),
                    ExactValueMatcher(value="598"),
                    ExactValueMatcher(value="600"),
                    ExactValueMatcher(value="604"),
                    ExactValueMatcher(value="608"),
                    ExactValueMatcher(value="612"),
                    ExactValueMatcher(value="616"),
                    ExactValueMatcher(value="620"),
                    ExactValueMatcher(value="630"),
                    ExactValueMatcher(value="638"),
                    ExactValueMatcher(value="646"),
                    ExactValueMatcher(value="642"),
                    ExactValueMatcher(value="643"),
                    ExactValueMatcher(value="663"),
                    ExactValueMatcher(value="894"),
                    ExactValueMatcher(value="882"),
                    ExactValueMatcher(value="674"),
                    ExactValueMatcher(value="678"),
                    ExactValueMatcher(value="682"),
                    ExactValueMatcher(value="752"),
                    ExactValueMatcher(value="756"),
                    ExactValueMatcher(value="686"),
                    ExactValueMatcher(value="688"),
                    ExactValueMatcher(value="690"),
                    ExactValueMatcher(value="694"),
                    ExactValueMatcher(value="716"),
                    ExactValueMatcher(value="702"),
                    ExactValueMatcher(value="534"),
                    ExactValueMatcher(value="703"),
                    ExactValueMatcher(value="705"),
                    ExactValueMatcher(value="090"),
                    ExactValueMatcher(value="706"),
                    ExactValueMatcher(value="724"),
                    ExactValueMatcher(value="144"),
                    ExactValueMatcher(value="654"),
                    ExactValueMatcher(value="659"),
                    ExactValueMatcher(value="662"),
                    ExactValueMatcher(value="666"),
                    ExactValueMatcher(value="670"),
                    ExactValueMatcher(value="736"),
                    ExactValueMatcher(value="710"),
                    ExactValueMatcher(value="239"),
                    ExactValueMatcher(value="410"),
                    ExactValueMatcher(value="728"),
                    ExactValueMatcher(value="740"),
                    ExactValueMatcher(value="744"),
                    ExactValueMatcher(value="748"),
                    ExactValueMatcher(value="760"),
                    ExactValueMatcher(value="762"),
                    ExactValueMatcher(value="158"),
                    ExactValueMatcher(value="834"),
                    ExactValueMatcher(value="764"),
                    ExactValueMatcher(value="768"),
                    ExactValueMatcher(value="772"),
                    ExactValueMatcher(value="776"),
                    ExactValueMatcher(value="780"),
                    ExactValueMatcher(value="148"),
                    ExactValueMatcher(value="203"),
                    ExactValueMatcher(value="792"),
                    ExactValueMatcher(value="788"),
                    ExactValueMatcher(value="795"),
                    ExactValueMatcher(value="796"),
                    ExactValueMatcher(value="798"),
                    ExactValueMatcher(value="800"),
                    ExactValueMatcher(value="804"),
                    ExactValueMatcher(value="348"),
                    ExactValueMatcher(value="858"),
                    ExactValueMatcher(value="850"),
                    ExactValueMatcher(value="840"),
                    ExactValueMatcher(value="860"),
                    ExactValueMatcher(value="548"),
                    ExactValueMatcher(value="336"),
                    ExactValueMatcher(value="862"),
                    ExactValueMatcher(value="784"),
                    ExactValueMatcher(value="704"),
                    ExactValueMatcher(value="876"),
                    ExactValueMatcher(value="162"),
                    ExactValueMatcher(value="112"),
                    ExactValueMatcher(value="732"),
                    ExactValueMatcher(value="140"),
                    ExactValueMatcher(value="196"),
                ],
            ),
        ],
    ),
    TrackingNumberDefinition(
        courier=Courier(code="dpd", name="DPD"),
        product=Product(name="DPD (14)"),
        number_regex=re.compile(
            "(\\b\\s*(?P<SerialNumber>([0-9]\\s*){14})(?P<CheckDigit>[0-9A-Z]\\s*)\\b)"
        ),
        tracking_url_template="https://www.dpdgroup.com/nl/mydpd/my-parcels/track?lang=en&parcelNumber=%s",
        serial_number_parser=DefaultSerialNumberParser(prepend_if=None),
        checksum_validator=Mod37_36(),
        additional_validations=[],
    ),
]
